-- 1. Total amount each customer spent
SELECT customer_id, SUM(price) AS total_spent
FROM sales
JOIN menu USING (product_id)
GROUP BY customer_id;

-- 2. How many days each customer visited the restaurant
SELECT customer_id, COUNT(DISTINCT order_date) AS visit_days
FROM sales
GROUP BY customer_id;

-- 3. First item from the menu purchased by each customer
SELECT customer_id, product_name
FROM (
  SELECT customer_id, order_date, product_name,
         RANK() OVER (PARTITION BY customer_id ORDER BY order_date) AS rnk
  FROM sales
  JOIN menu USING (product_id)
) AS ranked
WHERE rnk = 1;

-- 4. Most purchased item on the menu and how many times it was purchased
SELECT product_name, COUNT(*) AS purchase_count
FROM sales
JOIN menu USING (product_id)
GROUP BY product_name
ORDER BY purchase_count DESC
LIMIT 1;

-- 5. Most popular item for each customer
SELECT customer_id, product_name
FROM (
  SELECT customer_id, product_name, COUNT(*) AS cnt,
         RANK() OVER (PARTITION BY customer_id ORDER BY COUNT(*) DESC) AS rnk
  FROM sales
  JOIN menu USING (product_id)
  GROUP BY customer_id, product_name
) AS ranked
WHERE rnk = 1;

-- 6. First item purchased after becoming a member
SELECT customer_id, product_name
FROM (
  SELECT s.customer_id, s.order_date, m.product_name,
         RANK() OVER (PARTITION BY s.customer_id ORDER BY s.order_date) AS rnk
  FROM sales s
  JOIN menu m ON s.product_id = m.product_id
  JOIN members mb ON s.customer_id = mb.customer_id
  WHERE s.order_date >= mb.join_date
) AS ranked
WHERE rnk = 1;

-- 7. Item purchased just before becoming a member
SELECT customer_id, product_name
FROM (
  SELECT s.customer_id, s.order_date, m.product_name,
         RANK() OVER (PARTITION BY s.customer_id ORDER BY s.order_date DESC) AS rnk
  FROM sales s
  JOIN menu m ON s.product_id = m.product_id
  JOIN members mb ON s.customer_id = mb.customer_id
  WHERE s.order_date < mb.join_date
) AS ranked
WHERE rnk = 1;

-- 8. Total items and amount spent before becoming a member
SELECT s.customer_id, COUNT(*) AS total_items, SUM(m.price) AS total_spent
FROM sales s
JOIN menu m ON s.product_id = m.product_id
JOIN members mb ON s.customer_id = mb.customer_id
WHERE s.order_date < mb.join_date
GROUP BY s.customer_id;

-- 9. Loyalty points: $1 = 10 points, sushi has 2x multiplier
SELECT customer_id,
       SUM(CASE WHEN product_name = 'sushi' THEN price * 10 * 2 ELSE price * 10 END) AS total_points
FROM sales
JOIN menu USING (product_id)
GROUP BY customer_id;

-- 10. Bonus points in first week after joining (2x points on everything)
SELECT s.customer_id,
       SUM(price * 10 * 2) AS bonus_points
FROM sales s
JOIN menu m ON s.product_id = m.product_id
JOIN members mb ON s.customer_id = mb.customer_id
WHERE s.order_date BETWEEN mb.join_date AND mb.join_date + INTERVAL '6 days'
AND s.customer_id IN ('A', 'B')
GROUP BY s.customer_id;
